" Set vim directories to use ~/.config/vim
set runtimepath^=~/.config/vim
set runtimepath+=~/.config/vim/after
set packpath^=~/.config/vim
let &directory = expand('~/.config/vim/swap//')
let &backupdir = expand('~/.config/vim/backup//')
let &undodir = expand('~/.config/vim/undo//')

" Create directories if they don't exist
if !isdirectory(&directory) | call mkdir(&directory, 'p') | endif
if !isdirectory(&backupdir) | call mkdir(&backupdir, 'p') | endif
if !isdirectory(&undodir) | call mkdir(&undodir, 'p') | endif

" Set leader key to space
let mapleader = " "

" Use system clipboard for all yank/paste operations
set clipboard=unnamedplus
augroup YankToOSX
  autocmd!
  autocmd TextYankPost * if v:event.operator is 'y' | call system('pbcopy', @") | endif
augroup END

" Enable 24-bit colors
set termguicolors
set number
set relativenumber
call plug#begin('~/.config/vim/plugged')

" Theme
Plug 'catppuccin/vim', { 'as': 'catppuccin' }

" Fuzzy finder
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'

" File browser
Plug 'justinmk/vim-dirvish'

" LSP
Plug 'prabirshrestha/vim-lsp'
Plug 'mattn/vim-lsp-settings'

" Git
Plug 'tpope/vim-fugitive'

" Commenting
Plug 'tpope/vim-commentary'

call plug#end()
" Theme settings
"
colorscheme catppuccin_mocha
" Key mappings
"
nnoremap <leader>f :Files<CR>
nnoremap <leader>e :Dirvish<CR>
nnoremap <C-S-f> :Rg<CR>

" Buffer management
nnoremap <leader>bd :confirm bdelete<CR>

" Buffer navigation (Shift + hjkl)
nnoremap <S-h> :bprev<CR>
nnoremap <S-l> :bnext<CR>

" LSP settings
let g:lsp_settings_filetype_rust = ['rust-analyzer']
let g:lsp_settings_filetype_python = ['pyright']
let g:lsp_settings_root_markers = ['Cargo.toml', 'pyproject.toml', '.git']
" Enable LSP diagnostics and auto-install servers
let g:lsp_diagnostics_enabled = 1
let g:lsp_diagnostics_echo_cursor = 1

" Force LSP to use floating windows/popups
let g:lsp_hover_ui = 'float'
let g:lsp_preview_float = 1
let g:lsp_preview_doubletap = 1
let g:lsp_float_max_width = 80
let g:lsp_hover_conceal = 0

" Enable LSP for rust and python
augroup lsp_install
    au!
    autocmd User lsp_buffer_enabled setlocal omnifunc=lsp#complete
    autocmd User lsp_buffer_enabled setlocal signcolumn=yes
    " Custom hover function that forces popup
    autocmd User lsp_buffer_enabled nnoremap <buffer> K :LspHover<CR>
    autocmd User lsp_buffer_enabled nnoremap <buffer> gd <plug>(lsp-definition)
    autocmd User lsp_buffer_enabled nnoremap <buffer> gr <plug>(lsp-references)

augroup END
" Dirvish settings
"
let g:dirvish_mode = ':sort ,^.*[\/],'
" Go to definition with <Space> g d - Fixed for vim-lsp
"
nnoremap <leader>gd <plug>(lsp-definition)
